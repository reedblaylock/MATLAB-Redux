TODO

- Use MATLAB class naming conventions (camelCase?)
UPDATE: Revisit this later: http://www.datatool.com/downloads/MatlabStyle2%20book.pdf

- Extract the input-parsing from the subclass constructors. There's a lot of
repetition from class to class, and it would be easy to forget how to do
optional actions from one class to another...
UPDATE: It's annoying, but it makes the most sense to repeat the inputParser 
stuff in every file. If you were really fastidious about input parsing (which 
you're trying to be), then every function could mean additional layers of input
parsing; and, with each successive layer, it's harder to remember what you were 
trying to do in the first place.
But, maybe you just haven't thought of the right approach yet.

- Extend event.EventData so you can pass additional information with your
actions
UPDATE: This can be done (e.g. IncrementEventData and IncrementButton). You'll
probably want to spend some time thinking of the right way to do this, because 
at first glance it means a lot of subclassing. Keep moving forward with other 
application changes, and see how you feel.

- Make a real application! Start by loading videos/VocalTract objects/VocalTract
object file strings and displaying the frame on the screen. Add a slider so you 
can go back and forth faster (and try to get the screen to update as the slider 
moves). http://undocumentedmatlab.com/blog/continuous-slider-callback

http://undocumentedmatlab.com/blog/waiting-for-asynchronous-events